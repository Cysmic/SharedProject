{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hassa\\\\projects\\\\lavanotes\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './Styling/index.css';\nimport './Styling/output.css';\nimport { DndContext, closestCenter } from \"@dnd-kit/core\";\nimport { arrayMove, horizontalListSortingStrategy, rectSwappingStrategy, SortableContext, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\nimport React, { useState } from 'react';\nimport { Card, CardRow, CardRowContainer } from './CardDir/CardSection';\nimport { NoteTemplate, DirectoryTemplate, OnlineTemplate } from './Containers&Templates/Templates';\nimport { Container } from './Containers&Templates/Containers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet strat = rectSwappingStrategy;\nfunction App() {\n  _s();\n  const [containers, setContainers] = useState([\"Auxilary\", \"Primary\", \"Tetriary\"]);\n  const [templateType, setTemplates] = useState([\"1\", \"2\", \"3\"]);\n  const [parent, setParent] = useState(null);\n\n  //fix this so that I can drag and drop the templates into different containers\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    collisionDetection: closestCenter,\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 flex flex-row h-screen justify-evenly\",\n      children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n        items: templateType,\n        strategy: strat,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          dropId: 0,\n          id: containers[0],\n          children: /*#__PURE__*/_jsxDEV(DirectoryTemplate, {\n            id: \"drag\",\n            children: [/*#__PURE__*/_jsxDEV(CardRowContainer, {\n              text: \"Spirituality\",\n              color: \"bg-blue-300\",\n              children: CardRow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardRowContainer, {\n              text: \"Islam\",\n              color: \"bg-green-300\",\n              children: CardRow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardRowContainer, {\n              text: \"Philosophy\",\n              color: \"bg-red-300\",\n              children: CardRow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n        items: templateType,\n        strategy: strat,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          dropId: 1,\n          id: containers[1],\n          children: /*#__PURE__*/_jsxDEV(NoteTemplate, {\n            id: \"drag\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-white font-extrabold text-2xl mx-auto\",\n              children: \"Hello, world!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white\",\n              children: \"Welcome to your new Tailwind CSS + React project!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n        items: templateType,\n        strategy: strat,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          dropId: 2,\n          id: containers[2],\n          children: /*#__PURE__*/_jsxDEV(OnlineTemplate, {\n            id: \"d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n  function handleDragEnd(event) {\n    const {\n      over\n    } = event;\n\n    // If the item is dropped over a container, set it as the parent\n    // otherwise reset the parent to `null`\n    setParent(over ? over.id : null);\n  }\n}\n_s(App, \"y5afuK0rbIMdm943yz59eIdsmqU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["DndContext","closestCenter","arrayMove","horizontalListSortingStrategy","rectSwappingStrategy","SortableContext","verticalListSortingStrategy","React","useState","Card","CardRow","CardRowContainer","NoteTemplate","DirectoryTemplate","OnlineTemplate","Container","strat","App","containers","setContainers","templateType","setTemplates","parent","setParent","handleDragEnd","event","over","id"],"sources":["C:/Users/hassa/projects/lavanotes/src/App.js"],"sourcesContent":["import './Styling/index.css';\nimport './Styling/output.css';\n\nimport {\n  DndContext,\n  closestCenter\n} from \"@dnd-kit/core\";\nimport {\n  arrayMove,\n  horizontalListSortingStrategy,\n  rectSwappingStrategy,\n  SortableContext,\n  verticalListSortingStrategy,\n} from \"@dnd-kit/sortable\";\n\nimport React, {useState} from 'react';\n\nimport {Card, CardRow, CardRowContainer} from './CardDir/CardSection'\nimport {NoteTemplate, DirectoryTemplate, OnlineTemplate} from './Containers&Templates/Templates'\nimport {Container} from './Containers&Templates/Containers'\n\nlet strat = rectSwappingStrategy\n\nfunction App() {\n\n  const [containers, setContainers] = useState([\"Auxilary\", \"Primary\", \"Tetriary\"]);\n  const [templateType, setTemplates] = useState([\"1\", \"2\", \"3\"])\n  const [parent, setParent] = useState(null)\n\n  //fix this so that I can drag and drop the templates into different containers\n  return (\n    <DndContext\n        collisionDetection={closestCenter}\n        onDragEnd={handleDragEnd}>\n      <div className=\"bg-gray-800 flex flex-row h-screen justify-evenly\">\n      <SortableContext\n              items={templateType}\n              strategy={strat}>\n        <Container dropId = {0} id={containers[0]}>\n            \n              <DirectoryTemplate id='drag'>\n                <CardRowContainer text=\"Spirituality\" color='bg-blue-300'>{CardRow()}</CardRowContainer>\n                <CardRowContainer text=\"Islam\" color='bg-green-300'>{CardRow()}</CardRowContainer>\n                <CardRowContainer text=\"Philosophy\" color='bg-red-300'>{CardRow()}</CardRowContainer>\n              </DirectoryTemplate>\n            \n        </Container>\n        </SortableContext>\n\n        <SortableContext\n              items={templateType}\n              strategy={strat}>\n        <Container dropId = {1} id={containers[1]}>\n            \n                <NoteTemplate id='drag'>\n                <h1 className=\"text-white font-extrabold text-2xl mx-auto\">Hello, world!</h1>\n                <p className=\"text-white\">Welcome to your new Tailwind CSS + React project!</p>\n                </NoteTemplate>\n            \n        </Container>\n        </SortableContext>\n        \n        <SortableContext\n              items={templateType}\n              strategy={strat}>\n        <Container dropId = {2} id={containers[2]}>\n            \n              <OnlineTemplate id='d'>\n              </OnlineTemplate>\n            \n        </Container>\n        </SortableContext>\n\n      </div>\n    </DndContext>\n  );\n\n  function handleDragEnd(event) {\n    const {over} = event;\n\n    // If the item is dropped over a container, set it as the parent\n    // otherwise reset the parent to `null`\n    setParent(over ? over.id : null);\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}